@model IEnumerable<Assignment>

@{
    ViewData["Title"] = "Course Assignments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="text-center mb-4">Assignments for the Course</h1>

<div class="container">
    <div class="row">
        @foreach (var assignment in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@assignment.Title</h5>
                        <p class="card-text">@assignment.Description</p>
                        <p class="card-text"><strong>Due Date:</strong> @assignment.DueDate.ToString("yyyy-MM-dd")</p>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input assignment-checkbox" id="assignment-@assignment.AssignmentID" data-assignment-id="@assignment.AssignmentID" @(assignment.IsCompleted ? "checked" : "") />
                            <label class="form-check-label" for="assignment-@assignment.AssignmentID">Complete</label>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row mt-4">
        <div class="col-md-12">
            <div class="progress">
                <div class="progress-bar" role="progressbar" style="width: 0%;" id="progress-bar"></div>
            </div>
            <div id="progress-text" class="text-right mt-2">0/0</div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Function to update the progress bar based on completed assignments
        function updateProgressBar() {
            var totalAssignments = document.querySelectorAll('.assignment-checkbox').length;
            var completedAssignments = document.querySelectorAll('.assignment-checkbox:checked').length;

            var progress = (completedAssignments / totalAssignments) * 100;
            var progressBar = document.getElementById('progress-bar');
            var progressText = document.getElementById('progress-text');

            progressBar.style.width = progress + '%';

            if (progress === 100) {
                progressText.innerText = 'You are all up to date!';
            } else {
                progressText.innerText = `${completedAssignments}/${totalAssignments}`;
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            var checkboxes = document.querySelectorAll('.assignment-checkbox');

            checkboxes.forEach(function (checkbox) {
                checkbox.addEventListener('change', function () {
                    var assignmentId = this.dataset.assignmentId;
                    var isCompleted = this.checked;

                    // Send completion status to the server
                    updateAssignmentCompletion(assignmentId, isCompleted);
                });
            });

            // Load checkbox status and update progress bar on page load
            loadCheckboxStatus();
        });

        function updateAssignmentCompletion(assignmentId, isCompleted) {
            // Send AJAX request to update assignment completion status
            fetch(`/Student/UpdateAssignmentCompletion?assignmentId=${assignmentId}&isCompleted=${isCompleted}`, {
                method: 'POST'
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    // Update progress bar after successful completion status update
                    updateProgressBar();
                })
                .catch(error => console.error('Error:', error));
        }

        function loadCheckboxStatus() {
            var checkboxes = document.querySelectorAll('.assignment-checkbox');

            checkboxes.forEach(function (checkbox) {
                var assignmentId = checkbox.dataset.assignmentId;

                // Send AJAX request to fetch completion status for this assignment
                fetch(`/Student/GetAssignmentCompletionStatus?assignmentId=${assignmentId}`)
                    .then(response => response.json())
                    .then(data => {
                        // Set the checkbox state based on the completion status
                        checkbox.checked = data.isCompleted;

                        // Update progress bar after setting checkbox state
                        updateProgressBar();
                    })
                    .catch(error => console.error('Error:', error));
            });
        }
    </script>
}
